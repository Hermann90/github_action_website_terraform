name: Terraform Workflow with Approval

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      # - run:
      - name: terraform init & plan
        run: |
            terraform init -input=false
            terraform plan -out tfapply
    
      - name: Upload artifact for terraform apply
        uses: actions/upload-artifact@v3
        with:
          name: build-output-tfapply
          path: tfapply

      # - name: Terraform Init
      #   run: terraform init
      # terraform plan -out tfapply -var-file terraform.tfvars

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve


  apply-plan:
    runs-on: ubuntu-latest
    needs: plan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output-tfapply

      - name: Use the tfapply artifact
        run: |
          terraform apply -auto-approve tfapply
          terraform plan -destroy -out tfdestroy
      
      - name: Upload artifact for terraform apply
        uses: actions/upload-artifact@v3
        with:
          name: build-output-tfdestroy
          path: tfdestroy

  wait-for-approval:
    runs-on: ubuntu-latest
    needs: apply-plan
    environment:
      name: destroy-approval # Environment requiring manual approval
    steps:
      - name: Wait for Approval
        run: echo "Waiting for manual approval to destroy resources..."
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output-tfdestroy

  destroy:
    runs-on: ubuntu-latest
    needs: wait-for-approval
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # - name: Terraform Init
      #   run: terraform init

      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output-tfdestroy

      - name: Use the tfdestroy artifact
        run: |
          terraform apply -auto-approve tfdestroy

# version: 2

# jobs:
#   plan-apply:
#     working_directory: /tmp/project
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - checkout
#       - run:
#           name: terraform init & plan
#           command: |
#             terraform init -input=false
#             terraform plan -out tfapply -var-file terraform.tfvars
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   apply:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform
#           command: |
#             terraform apply -auto-approve tfapply
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   plan-destroy:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform create destroy plan
#           command: |
#             terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
#       - persist_to_workspace:
#           root: .
#           paths:
#             - .

#   destroy:
#     docker:
#       - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
#     steps:
#       - attach_workspace:
#           at: .
#       - run:
#           name: terraform destroy
#           command: |
#             terraform apply -auto-approve tfdestroy
# workflows:
#   version: 2
#   plan_approve_apply:
#     jobs:
#       - plan-apply
#       - hold-apply:
#           type: approval
#           requires:
#             - plan-apply
#       - apply:
#           requires:
#             - hold-apply
#       - plan-destroy:
#           requires:
#             - apply
#       - hold-destroy:
#           type: approval
#           requires:
#             - plan-destroy
#       - destroy:
#           requires:
#             - hold-destroy
